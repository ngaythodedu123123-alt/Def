import zlib, base64, sys
from Cryptodome.Cipher import AES, ChaCha20_Poly1305
from Cryptodome.PublicKey import RSA
from Cryptodome.Signature import pss
from Cryptodome.Hash import SHA256

_blob_b85 = b'5BuepBK)0$T;X9Qs|!_Mjyt$sq2f+DRWdaPMX_uFq~h$)EXWgc$S0w`foJF$JZY+?sOF%EiP7oSj#>vYajj4ldUqPIf)5mgfpJck^VPbglSO2{X8{p{&o7IZ$a~$hZ(3-zGX54_q$+r?3tW5t{umOa_SUiHh<ZEs4q*`n>!mcL-2{#{GkhPld7(4b`3_!T_jKDz0L>BkMVrWs<m#kI8juVq9g9<&)n&e;8|-=Afh#s)-*`C*db|AsFHa+C3FI?TxzFAh&P`lG*TLoq_O6Vl15!yw&+hBR@6Ckn?7WW5<vy?7CmGlo1=$rr$I(YiI2u&48FiiiKlH#0Af&)KwP-u~m2b`{er)fJKWMwLaQ2It2BsGvX7N}3<n6+Mn9dpz!nyEK(NFlSL#Lj9B9uJg<JKS(k}KokI!|E8zp#iw2dR=g)n^XiuSMx2)PvUAZchXh(6Y*KW(HA}gz4NI!B<48fU0GbKV@GDy`vBrFC=$-Z%OGXreWjFW60KAu=4(4F7GlOjqQuBar94z@yhI27HNWeF4O#!=lr;=vlP|h4{3GRk%1LeR2Lr%qVIFN667^CWpc`^gz0X-$r+mQ)?-Vf;@PdfL+muGz7saK3p6ktQlZYB{)3tJ%&c7@R41nK=yKO83e2e_!!wr29{i8EE>Pd>3{KFqeF1_aa|f_2UA?hk?*Ux<neKA2mtf*zC(t_Xd|alj*o8pXv!<vOl%;1SEK}T;46}u_hKbfAA^{SE`WR>0PVWNfnM<MNSE!bP1~!InegGOBwE4<eufma1B&K{T0pTRSI22L`zV!E+bd)B0@xd|-H=*1@u8dANT6z<=a;eK}{(gDDi6-~GUe+)(LyBc5ww_1DFC(WaF6@uOrgSGD4m>xPiiG?4n*JS+kco%iIvIBPGnDM@tmDD1(uQl=beMcZ>Vyd|SYt&@UbP9JXl3GDauJKTwD|%pCB|%3fT@&8rVT}9oPZ<<9-q8G3Bn&)D~f>c#%^#;wQ`P2bU4}zf~0h3hbfaiNuGt&)o3x|aG7#_7*c+#=fgP*6WJ|l=K-N;RA?@rdWW6`$bQ6GMgSVq<&|<wd_UX|vlZrjKV?GY!_lj^^Z(9Lpg%ep?GQY^(=rK!kT__1ddPuqM177#1*Q65jsd+XE<;YeI>$^4E*emGmbYT8FC<`ZcLNA9PNYj``kY)<Oje>%g6pp#s-{yU_o_QXxtY9aJWyr<KrEA6GTmP|viehTPq!3D3gmANKUrtXq}F*m5dmRU*k1M7OC<5?4WRpbP$!tRmv&Sj^(?eQojhD^Pgb|a1)O~z?U<Y}DoZfhF$9HBn%F$WTi#lvpG)3-R;2L$xj^H-L@n&=<gij)r^z!KLke@hU=<?WztZLXBqrmHK&K|OrA2?N`;%09wyJj7eTUE1hQXS<Pra=a$&cy+A4fC6>+-*;#tv}8{H_}^N-PBnS4;t7z*^^tM{1=5_H8To8pkA3kP$7~NbN5CUtXF#q4!54P_AP;Qr3SQ?Y`fL$@wV-BiMBmSIIBD#~cK~Q(ahoGT)nbhRoNX(nD-6nMvF)qWFERYYuH%sL;>wWT(J;fV4LCCSEO5H=`sp5|5yl|Hf<Lp=$FmLv$(A812f=YB7^fgMNnW7ea*W=FHU)t3uhT-_{=3(lcrjxVq`sKGZ^KRaFh#mRP;s>#<LH-W^(kS$77?E$s;pq<gVEEwA?=fU>yoF+OEbkQfI{6$<i0artd+41%YRSyEOqS>Jcuji{QsFEKA)OUgj(C$eWHYVRXBQb%p4IMR!m<);INUI@N8zCi-8lu8^o4J^C2RJCC8MLf<6Qf)6*I(Xmr(!Yk03Xx63fEP{GVj)gXKDrhm&Bk*zUv)ze3dlXfMhW20STgwtY2IFRiZUACoGVYRIg!W$n2+Ls->>{#MJR9P=iJ_xMLDsmfH~S&mX_hFBqxb&GB<4yfSkSC?klVIYl~1ahv5-AKip}2onwtFUO$F&Bc8?pPw%vW*M(LeylVqd;Xt{e8Jqflhjijb`3w^u_Y7I+#{XG?ClR(l)%g1blQbFsmpeSuZQP29J^l{KGYasz8R1^;PH2QW13aL#Dk#|?!SiB&7DCF3Qg6A$sO7WKgZq>|#FnD`t>m$6m~NNsg8oY-{vr`yojJQskT_LXWA3&FTp9S@iOl&rX=*^nF}>v+G51SpsU;Q(?F&AfZf4w1#NrlTmycVP6Os$!s;X*)?HdM#MRpsogE#I+II7)981B@H4Z`-vsg|d^LygVXuX$leeKnp;qzyDW2Qb&-K;BY=gH0FOtv7SFf3E7|*lG~qo%4L^N(Nk%#R8OyVM!r0R#V&zZ5i@Nv#x;JXR&PKanQo@p$qGmsz%SL@I_FHL)^@0oL`-N8)ur_fQ|c4mMako$r#LWxhSeb+Y*7d{QdE9jIL^Vg^`)5t*c}cJ>(v{0#Ap`W27^Y;`v#o_2UpQ>1Nd_?aZyk8ZT*1uzfM1OXpfZ>;0CJ!^}CW;YB+g&VFl)$`G0W3ty=6f9bD7H(gb6bYBST+?|nJS9sONq3~0KDup2yM#&XN>uZa0PXpHK#&f`0VAosejHRwcdz>x&P`9QH8M2XqOL@G|UeImd%Mthy$4Zm_tEuGdfhMr@6_bXSsWs>p6#60+1^%SJ#%PLWzt9KWx6m`|e)4xxnJ*wA;`PMOHI5A1tm+(==#&Pb>9L0$>zD6+T6Cq$vn$NJURmIe3L{~si1LcP7NxUzZ9z*vHBBN2G3+YDDtbLB7dedxN0ZlR4cPa&CtTVD3v)`ALE|as-twY=FtjpQ@Lbc1S{PI}4?*@<x>zOt#Es+U2k>)YxP>x4O1E#oFIC3e7KsgGX%LQ77(JZZoQ-EoV<QrPk<-B86IB=?Kp?;o3X6-*V;3TKwZ?e(uOyLql>P2BY{tlsB3`#7=+sCu)93-H1R!azz9LL=!>o69q-MC{AKIv$8SD4}DB8s{|7nJ|_7pO2|FU*wo>(8p(iWTe(OEIM7=VdtT1`akwOzawaLe5cNi@QD2?C#rpAaZnSg{k|b-~C}Qs%M!gtIUWN*}dxdY#HS)*(#NS^T7bJe1E2Y=GaJRM*LL+_&nS=y)I;nsB?x%AZnuOhQ}=MI;TY8AdOQ>=8cDgfR{t(ECSp*acgr!b1+qy!wBVD)z^Xw9oYs5~~9+veDJkIqp6NYcL&cD?xs?AGr<F9GEVJJVj7hwXgqyB(Iwx2AJ;MiYqvst7uKDrNcrGGnKL$W{Uxl*XczZ-}%sw3YVV}->7z@3VXl-E2R0dId*riKiM@~h_i>gqo3LRWMNe!UPv(Hu~lU>8>Xq4THx6D8J^>wS(F2b^zq!g0T0gE%bIOX8#i0CVF3lEmF1wtVsuW}P`g4<23b9izYU1QzPPJ)jS%FW*E5!vdJIV(4^^@dZXyIYoXSWM6aU`6p8By@XrQhUmF)}LU&krJFx@y+o6C#bL?!p;ZpB!hFU82{^K}%%_BQ(vv%0F^<xU`KVvoO`Bz*Y~I5qs!%^SCkzq<?o7YpNdY1vM$XQr|6Ng(cS5AsS*tgW8yzhh7>Id-9F;g=G?&mh1-3r93r-VW<ewKciwUgfJd0{-RM5u@Qqqlj9@R|0w-N5?pFitWT>XlTOa;Vk*SidrpGj#aH1SW)yNF-^>AyeFhoo<dznyObE>yRIu(%hpLdLOfUq3aDP<ZPFDbbrb;{&2tHKFU`Y1|75F**uWO7^ZG|be8=$Mu)*08jp)H!e#;3<TJ6ktC14szS_Mu3TF(;o@Wg9mv;YTf`hobgsY=RgcTOmcB-QyVtOV+fI2$rD)~;2ICCNnCY7WK}X~|Wb3X@iM;?GO6b-(!$OLu`lvBrx}0!pza=!isp5ZG^;ebKC;!$KTUDPF=X<_>K{EoB`QV<xm)*tg+2b{tV)RX%Mt134r&X7y_uIIFGTzjxFX9g=&?xqD=Ap-mcU49hB-6Bz-c_`KhDk9EM4RmPrL>s$;0PT^`FKv}I=T2t%o+ZN&BW)BS=pewp!1Q>od&|`Fjg5Q0Z!-x!L1o~ZpC`N*g5tL;Ao)Q4mOO;^pOCx3~q^%W6W%}&wu1+-pz?~2@w6%8mI6?SX4pL8^G{sM^2hg`phYdO5p4b%SeyX<D)ToS3s_v~*eMS228N*MyPr9%}r^CMly}wF3+svl3l9xyvo(=izZPUX5vqBsog}|W>5%y=Y(8@TD-M4I1J;sJR734D8p`~8#q889M!`zs=!A=z_G<J9_5rEI<1%F%j0mi+Ck6plvsMSN`6eCp%oc|nh2{RHTOh#FW$N9PdTO;+04P1w`_S24s2&@|?!{1wD5ZKt0X&|pYcg7aY-$}}TV5jF3Mq1G4E!q5@LPCX0_cqVk<rT1%!`reKu7j>!(*~J5jVH5PML@zU0)!QyFb^_pA`B%7&Ou&`8x5O}tQmo=i)=_UlwzTwU>NY$_(-TtwAixGIr*oa*>?P-D<iivg5|1deB({CI!kGN18w|X$UTxY{Ck&8yNq@q=h+1(Q@Lynuk#ic*oLLA#()MaL960<BJisYg$M@RKYPD9Pf{?xEVzxe1e-;QH*r)t=A+vIfiKJ_FE^G;a#^G)`Qw;JI6<QAbWYrYlE0Bmn7et-oRXQQlxvK`4k9)|xg6ILZ1Tpk`d-!NfSa>`|MQHQ%aqM5t71IxslE1Iu9p&N(6~5K$CP{hEs9IOss6~#qt*<fvCxKC>5<r+Em4-{!!|UneM@;}y!$5>wUoySM4LUd40almQwQ#E%ZXQUedoPy7JrCdC`!SAvIrwz;Q&9nO2RSKoR6)SYAdX~`adtQBhQN*K+(0qs)7Us<}_M8CdAZ@##8{0RhLi`;Zx(C&gYR{=F%%2Y~79i>#2qqT)L<x2aZTPRt21ySOB5UR68^?I+Kd!o1mGn$@ys$HEvwXw34eGLCgKE!7YBg*&Wmcv}y4wpvNRA%@@2f+3LG>`Rv7$ikeg0hC0KwF;b~CrP2jGKGhpyWjl!=JTg+==sR13JMq<kwV}#~@nm96SVM}V8<%HrEwScSQk73!u}Jm6z%#*wg+O;G4=SBlSHfeM88MUa**50UTH!$Fbyt?Awt@T70Yu_t8)t>5H*u7AjW&(>0jAkXp0|C!7O5ss!5K6(3!%eBQPRV%`w<0OnIPyQ2XbJnxN=Zm3-AT+VpHl5jm74myjZM&(AhiFq{)D^H*!3+pXHLWM7fI`>R=>zeUdl)v^&_qmRt8k>5ttyho%E87d{V0m-b6_lDYhX{dQ)v=i!~?yQaIn_y5?!SQAJ7D4&gcT7@|qs~|8XZ{W>dR<We7baGf_10-?3j-?nUtH_J}8|UWRN$|J@t<Nc|h~H(q_7le!szp4&ptdtlgiY`G+eP^K_nEQZ`}1!K-zzv8Wo*&{&{tI0LIkx#Xwej|C1$3U+1cYSWM-{l(66tWmfRLf<+oWkkD37L9Bd4Y+gnN9(0M6+vr&1foBAQ;@MQPrA#bu4RlwOXzyCY{4iy0AM)s&%`G#bDcuu%OMhb4}8*){G7LV?!y7VMmwk4|iu}4cXRScPMVCg5>kG&pX-Hyt@!CIH%&HG39K~1tc(*ttIe}$?exaQ4PvrTqQy54H6?VIQPq%6!IFRonviC0fex8>JMZlg=m9_+9J2}s$M4i%`W5Dyy$Bb%(c;|2d(#!L){<O9Ax)c7bd)7-W;k=(43WV~m0@6f7|{<PeE#=f+zrolN~uE8&FLYKZg{}(4ku|G$kITJd9%I#%)8Rov-Sc+$BDIi?hcy_7o*7+R~ErT>B$~Sl6P;ZqL3e#Y{j2WST@7`IWkjoJ620}O_Q@ys1Ljpb7v*QZ<j^eDXf&6JVFcY5nacf_%Cd)@uz4&dlZ$pmuH@A|}Kg=^dqJg+CN+48^wuYCpU>8x>h^8bi>W{<C>t>YalE(ojcCh6*A40T6*r9C?ZYiypT8(}-0GjdPJIHM1j-$uVi1v0)u_+O2Kv==$2V2f-!wc<{j`m_2%=`(i4T&=qOD8Sn88$1w7~f;k50;DN+eba;S88*lSix66lEU=rP>wJeRD%T)8(X8uMpst}j`+ed)C{`$nbwr$7pnkS>80=MFV2uGHo`xLsD}O;;x+=%7XQ(Z_ZFFU`}L8Dd7jM$nLeN02Vx;2soBxZzWFs6ld!dMnxdLXL>$n2%;#S^g!weF5thpD4?mhMf&kX9uyIEXv18End0MY5<e!ths<|QehQwC@-bv;fcy>ULi_nZKx&$`ShL3udza*H_HVt8^9-^l1GgQv_I;B|x+9|Npg*;i68RGGsE`5l0Z@@+&=YrOXHVSD?4vn#9`}basZh^2nGY)WFCVw7JMy&6UM`5H%YsEo6Wz0deh3a+vcZVeTBm4lxQD^0RQ5p&PMA%Xg<Y0alHYyv()+4Byg+S76>6XK{ikka&e|S^}Hj1xQMA%C7)4*NsDa0+1Hl^gnWN%X=W&O0-{+CXvIUB7NuQX42XVO4ZJxmk$+`!%uO%9zZoo!x|pa*D*MwW&KG3xTJ+;(ZKdh^erd1I+m7@<~WC9y;z7%=D9dGb0C!P<?f;o9AyX{$XtS6@h=I;#h|igtY)xYeO{I-ZDftQAl{i)#!2M}9y_T8r$bO9XW5v2SlHu*mOhLLJhTzEt+LL+DSg)9QQIGyrMZenZw#!x@iaoQ}wa>yorza`W0alTgCaYs~@NlqRN4Jad=}6U$?xaRVC?e@X=Ci6Vb8q(lgbhr07Sd^m&X9Y4&4`>-@Bc!t<f>C<N(KX|C{nlJQ&%F*M&V=FG2+Zceb#oSINNOXxh24#sx-DjKQ7)xtwL=B|zYe{?e^hr*2$%!+9k~^s!b{N#+2a^iE@a`AC=)DgImbv-48Fd10A`v})?v(U;O0QAk8iwj-uLm;+%u~8}{?JxM*wMLWT^xluccy?8ECjJ}cL+2b>m0Z6HfxWLoAzZ@1%4?rvp{o4TUWT0P~X~%!&V--FIfc{BVaidquHx10fJ}n9)A{k{yNE9q(aVUr_t)>3j@V1|Msqf_H(H#m-P)+X1wjs9o}H24XB2sO-O>oo)oLhIUbM0LkM_->{+X=naiD#VNE+A449j@Vtrv5W<b0wtk5dTf-Ru?Q*RUa43p$LaNK%hGdi)6{Hjfp%K*wt;D1QIID8tpM@m-=zb>ac{+pdgX);y^^C4w6-_e;}cQjONB~d~)|3=gj$Rjg3_+5o%yTCt>PjBS{*SsAWB;YHniRNEq-)n4G%IeJrYv7&2@Tw!dmUu`<?BYa9C6#%DC#9x8rMK>!M(4M4KD3VTV@qr|Z+%OW)M2Vl#x)`O|G1_<Sz1Av^?xKB4*K#t*vLa+B*%SN-PCDzwZVY25&Fu&p>Qka)`AOJIptiM6^5OX6}^0n!7Z5M{b98N%Q<?^B@L3fJ{wrZ{qqjwB%U9?fXC2SO1~m^b#&$7=p^hle=Wx!NQ#My(;k>44y~uj-=}M_)JNXU>9=*$jPE;p>V!rg^(h6Aztq*8Rgt%kV>UD(;6(cutqW>E%kaUA!XVXzD{y5iGNOWrK0xz%P6^$))Mo{}9UHWJMznuuxq?6E2{|ao6-0Eg&QNELfdn50raUm#2V<j*b2bDrF?@+cQ%V9dU>$@NY!7zsf!A61RK95c)i3<}#D6vNkdz~27B!Ap3R4I#sSqTuGygQ3hPkzcChd$(<X6hfOiroB^njb29dbiVm-w1Uj);z-JzDF-d<v9k-*=EM@4Pimt19PFG6;I=yzfo6TDJ0`8~t41`7~K-ar^>u)kQBjI`rxYn$q)$wM;dhzR%T2utw9;=mSj9q*MwTO_Nfm%mc0YTnopjqd$wir!S55v&S|1X##eI!vVy|EUVV|CZLc>OG$mVgm}q6rXd|qa=iqK>D{>nY$9;Ll2A<Yf>2indfxj=1Kd0BzIGP6;sxKp{s^52Ib||Zkm=giC({cxf_8UgWP(H&LVLVfXkhUX7>gq&QFU-+OhZ<cA9HLjV2-M{SaSQo=<QA|0v9jX&SNI(Yu_aN`s!UNaOhK2*&asD8lRIOt1ZO(gDPGQV^ns}&#AMs@8KIzwOl<}XNz{F^9aE-41n&(VeS`8Yvai7>0S8u)KM22s`UqmJQY(TvHq3Qhq?*HIax;2>}i((9j<u`lmmmQTAzg0>yzNYUKvwDJ;iol3i6C+TUG45&I$<LCU2(_Zi{0Y+MQlgP^^Ll)M)_IeTYMgtD%DQxYwww*tvy_1k%2kK1?E2Y0!`OJ_N(xPO~ncj`8hHUUVqda{-v^@7MV9PGw|!-SdP71B!)isWO++-iXRID%l@k*FcugTM<U3=iAVEAoF|_wt&&EiifoPKl7l#|30^EP&LLyEJra<T93QHJ-?lc?$0=73gO7{g-54u4}UYJ>CfT?Db#7sZF_g5h2m$-d$8~g?arr|qCRS-tEc>;Zn+qPOuO1Z2&{{({6G368{WxwA)Hq?ftmdD(DocZx28~-vYU0kU&wVIJ-YVTZJ)-Wi7F!SYD>(c_;?17t=(~$ObV*T{9(c>D4<W^6=U~2<mfl&fO=oBYksfpb3xm)>Z`qPK`g4mf6HxOQ~%UZY-s$6M0w)k&V2y3^u9rIhQX`dA{})<>H>*jCdqG629cX8$I(nU#VR9Zv_nJTsBee$E#Eg@b=Q^b2WBu84kqOk8Ck?TMFTy#R9gzHpF|ToDuoSEryW>Xe!}=?7}ErPF;*eiD2}XQ1=2D`O6*T5smgft{VWLk6+qB@HoH>HX%>7N9xVO2U)*Sgg!hVsxANJ3Oa'
_sig = b'\x9e-7\xeb\xa1\xe3\x12qr\xc5>\x86\x8eD\x84\x9e\xe4\x005\xeb\xb4\xc9\x06\x84\xc6\x91\xad\xc0j\xce\x9cA\x1b\xecb\x04\xb6O\xd4\xad\x12X\xe9!\xf4\xcc\xa8\t\x04>V\x9e.@\xcc>\xca\x82\xbf\x90Om\x91\xe4\xedN\x91m\xf1-\x12\x13z\xaf^9X<;\x86B\xa9U\xce\x06.\x91\x07#\xc44e\xb1#\x07O-\r\xdd*G\xaf\x97%\x1d\xeb\x90\xe0\xa1\x88\x01\x0e\x86\x93#\x16\x12\x13\xe6n\x89\xd7,hV\x02-\x84\xf7fD`\xd51\xd8w9\xe31O\xd0\xd7\xce\x1e\x87\xb6[C\x05p\xd9\xad\xab7\xf1\xaa\xb1\xba\xbbrg\xa3-\xe4\xb2a\xd3\x83\xdf\xfb9\x00C\xf80\xe3\xc9\x9b\xdd\xed>:\x80\x99\xd4\xf6\xde\xce\x10\xa26v\xae\x8c\xfd\xdfq\x1e*R\xae\xdd0?=K\xb7\xbd\x1d\x90]\xce\xd3\xee{\xffZ\x1b\n\x9dZF\x96j%\x9dc\x15\x86|\x04\xa6\xbew\x90\x96\x12\x11\xb3\x01\x1fc\xd9\xbae\xe2~\xf4?\xd8\xef\xc5\x15\xf9Ux'
_pub = b'-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA9psuEYTChfxYDGnSpcKz\n9JfyfBDwlKnwORn4A40vQTw0E0pxuY2hz/1+TbAsV3/sbkDNO3UbZrHgEVyoTqrK\nB63bfEEwN8LKiNJ4NrxO60AuF9DFA1I1YOEeZcNgHu3VEWZGa5mQ0ZNif7aWg+3r\nVVqMV6GBvmaiYZmVUViXFpnflsx4KBacnoEyiehrpcLE1Uji1hckor8Yvtb6i+zn\nsHHL2fPctkFv3/QgheSeRellS3nTJT32SbTNZU4TVsp43PPQu02Fw9RlAyEIAifw\nmnZEIfL4opIDAxkpM3ABpyOcvQ8LLPDOKNC2iu0gLMSzsJ6nHjGTkMtl/atGsSpp\n2QIDAQAB\n-----END PUBLIC KEY-----'
_rc4k = b'2\x9e\xc78\x12\xbcM\xa2\xa5(\x01\x85\x80\xc59"'
_aesk = b"|\x03\xd3\xbe'\t\xee>\xe5\xceNpX\xady32\xaeRT\x1f\x8a\x86\xc1)\x1d\x83\xe9\xb9{\xb5w"
_an = b'\xee\xe9+\xd4\xc0\xb0/\xad\xca\x85\xb5CZ8D\xc9'
_at = b'\xe6\x00\x90\xa6~oG\xd2A\xf8~\xb3Q\x08\xde='
_ck = b'&m\xa0_S\x0f\xa4,\xb9\xac\xd8\x01\x9b\x89f\xfa\xfc\x90U\xa7\xde\x88\t,\xf4v\x1cp\xee\x05!\x8c'
_cn = b'\xa8\xcf\x94=\xceI8@\x94\x19\xaa='
_ct = b'I\xd0\n\xa53\x19\x93\x96\x12\rJ\x9fQ\t[:'
_xb = 110

def rc4(k,d):
    S=list(range(256));j=0;o=bytearray()
    for i in range(256):
        j=(j+S[i]+k[i%len(k)])%256
        S[i],S[j]=S[j],S[i]
    i=j=0
    for b in d:
        i=(i+1)%256;j=(j+S[i])%256
        S[i],S[j]=S[j],S[i]
        o.append(b^S[(S[i]+S[j])%256])
    return bytes(o)

def xor_bytes(d,k):return bytes([b^k for b in d])

def ver(pub,blob,sig):
    try:
        key=RSA.import_key(pub)
        h=SHA256.new(blob)
        pss.new(key).verify(h,sig)
        return True
    except: return False

def main():
    if not ver(_pub,_blob_b85,_sig):sys.exit("Bad signature")
    xored=base64.b85decode(_blob_b85)
    cct=xor_bytes(xored,_xb)
    ch=ChaCha20_Poly1305.new(key=_ck,nonce=_cn)
    aes_ct=ch.decrypt_and_verify(cct,_ct)
    aes=AES.new(_aesk,AES.MODE_GCM,nonce=_an)
    rc4ed=aes.decrypt_and_verify(aes_ct,_at)
    comp=rc4(_rc4k,rc4ed)
    src=zlib.decompress(comp).decode("utf-8")
    ns={"__name__":"__main__"}
    exec(compile(src,"<obfus>","exec"),ns)

if __name__=="__main__":main()
